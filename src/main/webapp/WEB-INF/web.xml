<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    
    <welcome-file-list>
<!--        <welcome-file>/admin/jsp/adminlogin.jsp</welcome-file>-->
        <welcome-file>/back/jsp/tree.jsp</welcome-file>
<!--        <welcome-file>/admin/jsp/backmain.jsp</welcome-file>-->
    </welcome-file-list>



    <!-- Spring和mybatis的配置文件 -->


    <context-param>
        <param-name>contextConfigLocation</param-name>
<!--        <param-value>classpath:spring-mvc1.xml</param-value>-->
        <param-value>classpath:spring-mybatis.xml</param-value>

    </context-param>


    <servlet>
        <servlet-name>MySpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc1.xml</param-value>
        </init-param>
<!--        <init-param>-->
<!--            <param-name>contextConfigLocation</param-name>-->
<!--            &lt;!&ndash;      　　如果要装入多个配置文件,在<param-value>标记中用逗号作分隔符即可。&ndash;&gt;-->
<!--            <param-value>classpath:spring-mvc1.xml</param-value>-->
<!--        </init-param>-->
        <!--    1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。-->
        <!--    2)它的值必须是一个整数，表示servlet应该被载入的顺序-->
        <!--    2)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；-->
        <!--    3)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。-->
        <!--    4)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。-->
        <!--    5)当值相同时，容器就会自己选择顺序来加载。
                6）只有这一个Servlet，且是在应用启动时就执行加载-->
        <load-on-startup>1</load-on-startup>
    </servlet>

<!--    <servlet-mapping>-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.js</url-pattern>-->
<!--    </servlet-mapping>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.css</url-pattern>-->
<!--    </servlet-mapping>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.jpg</url-pattern>-->
<!--    </servlet-mapping>-->
<!--    <servlet-mapping >-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.png</url-pattern>-->

<!--    </servlet-mapping>-->
<!--    <servlet-mapping >-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.woff</url-pattern>-->

<!--    </servlet-mapping>-->
<!--    <servlet-mapping >-->
<!--        <servlet-name>default</servlet-name>-->
<!--        <url-pattern>*.ttf</url-pattern>-->

<!--    </servlet-mapping>-->
    <servlet-mapping>
        <servlet-name>MySpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>



    <!--  本Listener会去加载第一步中指定的配置文件,
    如果指定了要加载的文件,则会去加载相应的xml,
    没有指定默认去加载/WEB-INF/下的applicationContext.xml
    <listener>能为web应用创建监视器，监听上下文的各种事件
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

</web-app>